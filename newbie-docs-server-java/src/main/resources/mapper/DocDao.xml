<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="site.snewbie.docs.server.dao.DocDao">
    <resultMap id="BaseResultMap" type="site.snewbie.docs.server.model.entity.Doc">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="book_id" jdbcType="BIGINT" property="bookId"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="slug" jdbcType="VARCHAR" property="slug"/>
        <result column="book_slug" jdbcType="VARCHAR" property="bookSlug"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="editor" jdbcType="INTEGER" property="editor"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="words_count" jdbcType="INTEGER" property="wordsCount"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="editing_user" jdbcType="VARCHAR" property="editingUser"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updater" jdbcType="BIGINT" property="updater"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List_Without_Content">
        id
        , book_id, parent_id, slug, book_slug, title, editor, words_count, sort, editing_user, creator, create_time, updater, update_time
    </sql>

    <sql id="Base_Column_List_With_Content">
        id
        , book_id, parent_id, slug, book_slug, title, editor, words_count, content, sort, editing_user, creator, create_time, updater, update_time
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into newbie_docs (book_id, parent_id, slug, book_slug, title, editor, words_count, content,
                                 sort,
                                 creator, create_time, updater,
                                 update_time)
        values (#{bookId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{slug,jdbcType=VARCHAR},
                #{bookSlug,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{editor,jdbcType=INTEGER},
                #{wordsCount,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
                #{sort,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
                #{updater,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="update">
        update newbie_docs
        <set>
            <if test="bookId != null">
                book_id = #{bookId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="bookSlug != null">
                book_slug = #{bookSlug,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="editor != null">
                editor = #{editor,jdbcType=INTEGER},
            </if>
            <if test="wordsCount != null">
                words_count = #{wordsCount,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            updater = #{updater,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </set>
        where id = #{id,jdbcType=BIGINT} and is_deleted = 0
    </update>

    <update id="delete">
        update newbie_docs
        set is_deleted  = 1,
            updater     = #{updater,jdbcType=BIGINT},
            update_time = now()
        where id = #{id,jdbcType=BIGINT}
          and is_deleted = 0
    </update>

    <update id="changeParentId">
        update newbie_docs
        set parent_id = #{parentId,jdbcType=BIGINT},
            updater     = #{updater,jdbcType=BIGINT},
            update_time = now()
        where id = #{id,jdbcType=BIGINT}
          and is_deleted = 0
    </update>

    <update id="changeTitle">
        update newbie_docs
        set title       = #{newTitle,jdbcType=VARCHAR},
            updater     = #{updater,jdbcType=BIGINT},
            update_time = now()
        where id = #{id,jdbcType=BIGINT}
          and is_deleted = 0
    </update>

    <update id="updateEditingUser">
        update newbie_docs
        set editing_user = #{editingUser,jdbcType=VARCHAR}, update_time = now()
        where id = #{id,jdbcType=BIGINT} and is_deleted = 0 and (editing_user = #{editingUser,jdbcType=VARCHAR} or editing_user = '')
    </update>

    <update id="forceUpdateEditingUser">
        update newbie_docs
        set editing_user = #{editingUser,jdbcType=VARCHAR}, update_time = now()
        where id = #{id,jdbcType=BIGINT} and is_deleted = 0 and (now() - update_time) > #{timeout,jdbcType=INTEGER}
    </update>

    <select id="exists" resultType="boolean">
        select true
        from newbie_docs
        where book_slug = #{bookSlug,jdbcType=VARCHAR}
          and slug = #{docSlug,jdbcType=VARCHAR}
          and is_deleted = 0 limit 1
    </select>

    <select id="selectAllWithoutContent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_Without_Content"/>
        from newbie_docs
        where book_slug = #{bookSlug,jdbcType=VARCHAR} and is_deleted = 0
        order by sort asc
    </select>

    <select id="selectAllWithContent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_With_Content"/>
        from newbie_docs
        where book_slug = #{bookSlug,jdbcType=VARCHAR}
          and is_deleted = 0
        order by sort asc
    </select>

    <select id="selectMaxSort" resultType="int">
        select ifnull(max(sort), 0)
        from newbie_docs
        where is_deleted = 0
          and book_slug = #{bookSlug,jdbcType=VARCHAR}
          and parent_id = #{parentId,jdbcType=BIGINT}
    </select>

    <select id="selectTotalDocsCount" resultType="java.lang.Long">
        select count(*)
        from newbie_docs
        where is_deleted = 0
          and book_id = #{bookId,jdbcType=BIGINT}
          and slug not in ('root', 'home')
    </select>

    <select id="selectTotalWordsCount" resultType="java.lang.Long">
        select sum(words_count)
        from newbie_docs
        where is_deleted = 0
          and book_id = #{bookId,jdbcType=BIGINT}
          and slug not in ('root', 'home')
    </select>

    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_Without_Content"/>
        from newbie_docs
        where id = #{id,jdbcType=BIGINT}
        and is_deleted = 0
    </select>

    <select id="selectOneWithoutContent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_Without_Content"/>
        from newbie_docs
        where id = #{id,jdbcType=BIGINT}
        and is_deleted = 0
    </select>

    <select id="selectOneWithContent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_With_Content"/>
        from newbie_docs
        where id = #{id,jdbcType=BIGINT}
        and is_deleted = 0
    </select>

    <select id="findIndex" resultType="java.lang.Integer">
        select details.`index`
        from (select id, row_number() over (order by sort asc) - 1 as `index`
              from newbie_docs
              where parent_id = #{parentId,jdbcType=BIGINT}
                and is_deleted = 0
              order by sort asc) details
        where details.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findChildren" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_Without_Content"/>
        from newbie_docs
        where parent_id = #{parentId,jdbcType=BIGINT}
          and is_deleted = 0
        order by sort asc
    </select>
</mapper>